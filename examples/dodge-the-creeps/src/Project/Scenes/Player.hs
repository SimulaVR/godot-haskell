-- | This file is AUTOGENERATED by godot-haskell-project-generator. DO NOT EDIT

{-# LANGUAGE FlexibleContexts, FunctionalDependencies, MultiParamTypeClasses,
  UndecidableInstances, OverloadedStrings, TemplateHaskell, TypeApplications,
  TypeFamilies, DataKinds, TypeOperators, FlexibleInstances, RankNTypes,
  AllowAmbiguousTypes, ScopedTypeVariables, DerivingStrategies,
  GeneralizedNewtypeDeriving, LambdaCase #-}

module Project.Scenes.Player where
import Project.Support
import Godot
import GHC.TypeLits

import Godot.Core.AnimatedSprite()
import Godot.Core.CollisionShape2D()
import Godot.Core.Area2D()

instance SceneResourcePath "Player" where
  sceneResourcePath = "res://Player.tscn"


instance SceneRoot "Player" where
  type SceneRootNode "Player" = "Player"


instance SceneNode        "Player" "AnimatedSprite" where
  type SceneNodeType      "Player" "AnimatedSprite" = AnimatedSprite
  type SceneNodeName      "Player" "AnimatedSprite" = "AnimatedSprite"
  type SceneNodeIsHaskell "Player" "AnimatedSprite" = 'Nothing


instance SceneNode        "Player" "CollisionShape2D" where
  type SceneNodeType      "Player" "CollisionShape2D" = CollisionShape2D
  type SceneNodeName      "Player" "CollisionShape2D" = "CollisionShape2D"
  type SceneNodeIsHaskell "Player" "CollisionShape2D" = 'Nothing


instance SceneNode        "Player" "Player" where
  type SceneNodeType      "Player" "Player" = Area2D
  type SceneNodeName      "Player" "Player" = "Player"
  type SceneNodeIsHaskell "Player" "Player" = 'Just '("Player", "Player")


instance SceneConnection "Player" "Player" "body_entered" "Player" "_on_Player_body_entered"

